---
- name: Preconfig master servers
  hosts: masters
  become: true

  vars: 
    source_fld: ./source

  tasks:
  - name: Check Linux version
    debug: var=ansible_os_family

  - block:      #RH
      - name: Install apache
        yum: name=httpd state=latest

      - name: Start and enable apache
        service: name=httpd state=started enabled=yes

      - name: Install git
        yum: name=git state=latest

      - name: Install yum-utils
        yum: name=yum-utils state=latest

      - name: Add Docker repo
        get_url:
          url: https://download.docker.com/linux/centos/docker-ce.repo
          dest: /etc/yum.repos.d/docker-ce.repo

      - name: Install common software requirements
        become: true
        yum:
          state: present
          name: 
            - docker-ce
            - docker-ce-cli
            - containerd.io
            - docker-compose-plugin

    when: ansible_os_family == "RedHat"
  
  - block:      #DB
      - name: Install apache
        apt: name=apache2 state=latest

      - name: Start and enable apache
        service: name=apache2 state=started enabled=yes

      - name: Install git
        apt: name=git state=latest

      - name: Install apt-transport-https
        apt:
          name:
            - apt-transport-https
            - ca-certificates
            - lsb-release
            - gnupg
          state: latest
          update_cache: true

      - name: Add signing key
        apt_key:
          url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
          state: present

      - name: Add repository into sources list
        apt_repository:
          repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
          state: present
          filename: docker

      - name: Install Docker
        apt:
          name:
            - docker
            - docker.io
            - docker-compose
            - docker-registry
          state: latest
          update_cache: true
          
    when: ansible_os_family == "Debian"

  - name: Start and enable Docker
    service: name=docker state=started enabled=yes

  - name: Copy files to webservers
    copy: src={{ item }} dest=/var/www/html mode=0555
    with_fileglob: "{{ source_fld }}/*.*"