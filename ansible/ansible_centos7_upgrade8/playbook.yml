---
- hosts: centos
  any_errors_fatal: true
  become: true

  vars_prompt:
    - name: confirmation
      prompt: "Please remove Unused and Conflicting Packages/Configuratons using rpmconf before update. Answer with 'YES' to proceed"
      default: "NO"
      private: false

  tasks:
  - debug:
      msg:
      - "{{ hostvars[inventory_hostname].ansible_distribution }}"
      - "{{ hostvars[inventory_hostname].ansible_distribution_major_version }}"
      - "{{ hostvars[inventory_hostname].ansible_distribution_version }}"

  - name: "Check if yum is installed"
    package_facts:
      manager: "auto"


  - block:
      - block:          
          - name: Update to latest Centos 7
            yum: name=* state=latest
            failed_when: confirmation != "YES"

          - name: Reboot servers
            shell: sleep 5 && reboot
            async: 1
            poll: 0
            
          - name: Wait for restart 
            wait_for: 
              host: "{{ inventory_hostname }}"
              state: started
              delay: 5
              timeout: 40
            delegate_to: 127.0.0.1

          - name: Install required packages
            yum: name={{ item }} state=latest
            with_items: 
            - epel-release
            - yum-utils
            - rpmconf

          - name: Install dnf
            yum: name=dnf state=latest

          - name: Remove yum package manager
            dnf: name={{ item }} state=absent
            with_items: 
            - yum 
            - yum-metadata-parser

          - name: Remove yum configs
            file:
              state: absent
              path: /etc/yum

        when: "'yum' in ansible_facts.packages"

      - name: build cache for DNF repositories
        shell: dnf -y makecache
        failed_when: confirmation != "YES"

      # - name: Update to latest Centos 7
      #   dnf: name=* state=latest
        

      - name: Install CentOS 8 release package
        shell: dnf install -y http://vault.centos.org/8.5.2111/BaseOS/x86_64/os/Packages/{centos-linux-repos-8-3.el8.noarch.rpm,centos-linux-release-8.5-1.2111.el8.noarch.rpm,centos-gpg-keys-8-3.el8.noarch.rpm}

      - name: Upgrade EPEL-Release repo
        dnf: name=epel-release state=latest

      - name: Make repos backup dir
        file:
          path: /etc/yum.repos.d/backups
          state: directory

      - name: Move backups
        copy:
          src: "{{ item }}"
          dest: /etc/yum.repos.d/backups
        with_fileglob: "/etc/yum.repos.d/CentOS-*"
      
      - name: Create new config for CentOS BaseOS repo
        copy:
          src: ./source/CentOS-Linux-BaseOS.repo
          dest: /etc/yum.repos.d/CentOS-Linux-BaseOS.repo
          
      - name: Create new config for CentOS AppStream repo
        copy:
          src: ./source/CentOS-Linux-AppStream.repo
          dest: /etc/yum.repos.d/CentOS-Linux-AppStream.repo

      - name: Remove the old CentOS 7 Kernel
        shell: rpm -e `rpm -q kernel` --nodeps
        when: 
         - "'kernel' in ansible_facts.packages"
      
      - name: Remove the old CentOS 7 kernel-devel
        shell: rpm -e `rpm -q kernel-devel` --nodeps
        when: 
         - "'kernel-devel' in ansible_facts.packages"

      - name: Remove all conflicting packages
        shell: rpm -e --nodeps sysvinit-tools
        when: 
        - "'sysvinit-tools' in ansible_facts.packages"

      - name: Remove conflicting packages before update
        dnf: name="{{ item }}" state=absent
        with_items: 
          - NetworkManager
          - dracut-network
          - python36-rpmconf

      - name: Upgrade to 8. This action may take a long time.
        shell: dnf -y --releasever=8 --allowerasing --setopt=deltarpm=false distro-sync

      - name: Install new Kernel
        dnf: name=kernel-core state=latest


      - name: Install minimal packages
        dnf:
          name: '{{ item }}'
          state: latest
        with_items: 
          - '@Core'
          - '@Minimal Install'


      - name: Reboot servers
        shell: sleep 5 && reboot
        async: 1
        poll: 0

      - name: Check current Centos version
        debug: 
          msg:
          - "{{ hostvars[inventory_hostname].ansible_distribution_version }}"

    when: ansible_os_family == "RedHat"